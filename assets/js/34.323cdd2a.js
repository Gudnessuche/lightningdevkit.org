(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{346:function(e,t,n){"use strict";n.r(t);var a=n(6),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"private-key-management"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#private-key-management"}},[e._v("#")]),e._v(" Private Key Management")]),e._v(" "),n("p",[e._v('LDK has "default implementations", but you can choose to provide private keys to LDK in any way you wish following a simple API. LDK even supports a generic API for signing transactions, allowing you to run LDK without any private keys in memory and/or putting private keys only on hardware wallets.')]),e._v(" "),n("p",[e._v("While LDK's default implementation is currently within Rust-Lightning, it is still considered a sample module.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/keysinterface/struct.KeysManager.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("LDK's "),n("code",[e._v("KeysManager")]),e._v(" docs"),n("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=i.exports}}]);