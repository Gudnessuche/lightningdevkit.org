(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{466:function(t,n,a){"use strict";a.r(n);var s=a(18),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"building-a-node-with-ldk-in-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#building-a-node-with-ldk-in-java"}},[t._v("#")]),t._v(" Building a Node with LDK in Java")]),t._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("This document covers everything you need to make a node using LDK in Java.")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#setup"}},[t._v("Setup")]),t._v(" covers everything you need to do to set up LDK on startup.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#running-ldk"}},[t._v("Running LDK")]),t._v(" covers everything you need to do while LDK is running to keep it operational.")])]),t._v(" "),a("p",[t._v("Note that LDK does not assume that safe shutdown is available, so there is no\nshutdown checklist.")]),t._v(" "),a("h2",{attrs:{id:"setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),a("h3",{attrs:{id:"1-initialize-the-feeestimator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-initialize-the-feeestimator"}},[t._v("#")]),t._v(" 1. Initialize the "),a("code",[t._v("FeeEstimator")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" estimating fees for on-chain transactions that LDK wants broadcasted.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourFeeEstimator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FeeEstimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FeeEstimatorInterface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_est_sat_per_1000_weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfirmationTarget")]),t._v(" conf_target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf_target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfirmationTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LDKConfirmationTarget_Background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to retrieve a background feerate>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf_target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfirmationTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LDKConfirmationTarget_Normal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to retrieve a normal (i.e. within ~6 blocks) feerate>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf_target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfirmationTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LDKConfirmationTarget_HighPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to retrieve a high-priority feerate>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FeeEstimator")]),t._v(" fee_estimator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FeeEstimator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourFeeEstimator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")])]),t._v(" "),a("ol",[a("li",[t._v("Fees must be returned in: satoshis per 1000 weight units")]),t._v(" "),a("li",[t._v("Fees returned must be no smaller than 253 (equivalent to 1 satoshi/vbyte, rounded up)")]),t._v(" "),a("li",[t._v("To reduce network traffic, you may want to cache fee results rather than\nretrieving fresh ones every time")])]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/chaininterface/trait.FeeEstimator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/FeeEstimator.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"2-initialize-the-logger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-initialize-the-logger"}},[t._v("#")]),t._v(" 2. Initialize the "),a("code",[t._v("Logger")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" LDK logging")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourLogger")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LoggerInterface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to print this log and/or write this log to a file>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),t._v(" logger "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")]),t._v(" you'll most likely want to write the logs to a file for debugging purposes.")]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/util/logger/trait.Logger.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/Logger.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"3-initialize-the-broadcasterinterface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-initialize-the-broadcasterinterface"}},[t._v("#")]),t._v(" 3. Initialize the "),a("code",[t._v("BroadcasterInterface")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" broadcasting various Lightning transactions")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourBroadcaster")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BroadcasterInterface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BroadcasterInterfaceInterface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("broadcast_transaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to broadcast the given transaction here>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BroadcasterInterface")]),t._v(" tx_broadcaster "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BroadcasterInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourBroadcaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/chaininterface/trait.BroadcasterInterface.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/BroadcasterInterface.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"4-optional-initialize-the-networkgraph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#4-optional-initialize-the-networkgraph"}},[t._v("#")]),t._v(" 4. Optional: Initialize the "),a("code",[t._v("NetworkGraph")])]),t._v(" "),a("p",[a("strong",[t._v("You must follow this step if:")]),t._v(" you need LDK to provide routes for sending payments (i.e. you are "),a("em",[t._v("not")]),t._v(" providing your own routes)")]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" generating routes to send payments over")]),t._v(" "),a("p",[a("strong",[t._v("Example:")]),t._v(" initializing "),a("code",[t._v("NetworkGraph")]),t._v(" on signet")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Network")]),t._v(" network "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LDKNetwork_Signet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BestBlock")]),t._v(" genesisBlock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BestBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_genesis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" genesis_block_hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" genesisBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_hash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetworkGraph")]),t._v(" networkGraph "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetworkGraph")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genesis_block_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")]),t._v(" this struct is not required if you are providing your own routes. It will be used internally in "),a("code",[t._v("ChannelManagerConstructor")]),t._v(" to build a "),a("code",[t._v("NetGraphMsgHandler")]),t._v(". Other networking options are: "),a("code",[t._v("LDKNetwork_Bitcoin")]),t._v(", "),a("code",[t._v("LDKNetwork_Regtest")]),t._v(" and "),a("code",[t._v("LDKNetwork_Testnet")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("Optional dependency:")]),t._v(" "),a("code",[t._v("BestBlock")]),t._v(", the best known block as identified by its hash and height. Recommended to retrieve the genesis block from the target network.")]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/0.0.103/lightning/routing/network_graph/struct.NetworkGraph.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("NetworkGraph")]),t._v(" Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/NetworkGraph.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("NetworkGraph")]),t._v(" Java bindings"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://docs.rs/lightning/0.0.103/lightning/chain/struct.BestBlock.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("BestBlock")]),t._v(" Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/BestBlock.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("BestBlock")]),t._v(" Java bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"5-initialize-persist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#5-initialize-persist"}},[t._v("#")]),t._v(" 5. Initialize "),a("code",[t._v("Persist")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" persisting crucial channel data in a timely manner")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Persist")]),t._v(" persister "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Persist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Persist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PersistInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result_NoneChannelMonitorUpdateErrZ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("persist_new_channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutPoint")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelMonitor")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" channel_monitor_bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to write these bytes to disk, keyed by `id`>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result_NoneChannelMonitorUpdateErrZ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_persisted_channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutPoint")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelMonitorUpdate")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelMonitor")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" channel_monitor_bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to update the `ChannelMonitor`'s file on disk with these")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  new bytes, keyed by `id`>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")]),t._v(" "),a("code",[t._v("ChannelMonitor")]),t._v("s are objects which are capable of responding to on-chain\nevents for a given channel. Thus, you will have one "),a("code",[t._v("ChannelMonitor")]),t._v(" per channel, identified by the\nfunding output "),a("code",[t._v("id")]),t._v(", above. They are persisted in real-time and the "),a("code",[t._v("Persist")]),t._v(" methods will block\nprogress on sending or receiving payments until they return. You must ensure that\n"),a("code",[t._v("ChannelMonitor")]),t._v("s are durably persisted to disk before returning or you may lose funds.")]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/channelmonitor/trait.Persist.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/Persist.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"6-initialize-the-eventhandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#6-initialize-the-eventhandler"}},[t._v("#")]),t._v(" 6. Initialize the "),a("code",[t._v("EventHandler")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" (1) LDK produces events that must be handled by you,\nsuch as telling you when a payment has been successfully received or when a\nfunding transaction is ready for broadcast. (2) After new event(s) are handled,\nthe "),a("code",[t._v("ChannelManager")]),t._v(" must be re-persisted to disk and/or backups.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourObj")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManagerConstructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventHandler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FundingGenerationReady")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PaymentReceived")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PaymentSent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PaymentPathFailed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingHTLCsForwardable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpendableOutputs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PaymentForwarded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChannelClosed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to handle this event>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("persist_manager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" channel_manager_bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to persist channel_manager_bytes to disk and/or backups>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("persist_network_graph")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" network_graph_bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to persist network_graph_bytes to disk and/or backups>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManagerConstructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventHandler")]),t._v(" customEventHandler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("Implementation notes:")])]),t._v(" "),a("ul",[a("li",[t._v("See References for an integrated example of handling LDK events (in Rust)")]),t._v(" "),a("li",[t._v("It's important to read the documentation (linked in References) for each event\nto make sure you satisfy the API requirements for handling it")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-sample/blob/bc07db6ca4a3323d8718a27f85182b8157a20750/src/main.rs#L101-L240",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example of handling LDK events in Rust"),a("OutboundLink")],1),t._v(",\n"),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/util/events/enum.Event.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs for LDK events"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"7-optional-initialize-the-transaction-filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#7-optional-initialize-the-transaction-filter"}},[t._v("#")]),t._v(" 7. Optional: Initialize the Transaction "),a("code",[t._v("Filter")])]),t._v(" "),a("p",[a("strong",[t._v("You must follow this step if:")]),t._v(" you are "),a("em",[t._v("not")]),t._v(" providing full blocks to LDK,\ni.e. if you're using BIP 157/158 or Electrum as your chain backend")]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" if you are not providing full blocks, LDK uses this\nobject to tell you what transactions and outputs to watch for on-chain. You'll\ninform LDK about these transactions/outputs in Step 14.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Filter")]),t._v(" tx_filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FilterInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register_tx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" txid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" script_pubkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code for you to watch for this transaction on-chain>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Option_C2Tuple_usizeTransactionZZ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register_output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WatchedOutput")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code for you to watch for any transactions that spend this")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  output on-chain>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")]),t._v(" see the "),a("RouterLink",{attrs:{to:"/blockchain_data/introduction/"}},[t._v("Blockchain Data")]),t._v(" guide for more info")],1),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/trait.Filter.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/Filter.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1),t._v(", "),a("RouterLink",{attrs:{to:"/blockchain_data/introduction/"}},[t._v("Blockchain Data guide")])],1),t._v(" "),a("h3",{attrs:{id:"8-initialize-the-chainmonitor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#8-initialize-the-chainmonitor"}},[t._v("#")]),t._v(" 8. Initialize the "),a("code",[t._v("ChainMonitor")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" monitoring the chain for lighting transactions that are relevant to our node, and broadcasting transactions if need be")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// leave this as `null` or insert the Filter object, depending on")]),t._v("\n               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// what you did for Step 7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" chain_monitor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChainMonitor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx_broadcaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fee_estimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" persister"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("code",[t._v("FeeEstimator")]),t._v(", "),a("code",[t._v("Logger")]),t._v(", "),a("code",[t._v("BroadcasterInterface")]),t._v(", "),a("code",[t._v("Persist")])]),t._v(" "),a("p",[a("strong",[t._v("Optional dependency:")]),t._v(" "),a("code",[t._v("Filter")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/chainmonitor/struct.ChainMonitor.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/ChainMonitor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"9-initialize-the-keysmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#9-initialize-the-keysmanager"}},[t._v("#")]),t._v(" 9. Initialize the "),a("code",[t._v("KeysManager")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" providing keys for signing Lightning transactions")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" key_seed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to fill key_seed with random bytes OR if restarting, reload the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// seed from disk>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeysManager")]),t._v(" keys_manager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeysManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key_seed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")])]),t._v(" "),a("ul",[a("li",[t._v("See the "),a("RouterLink",{attrs:{to:"/key_management/"}},[t._v("Key Management")]),t._v(" guide for more info")],1),t._v(" "),a("li",[t._v("Note that you must write the "),a("code",[t._v("key_seed")]),t._v(" you give to the "),a("code",[t._v("KeysManager")]),t._v(" on\nstartup to disk, and keep using it to initialize the "),a("code",[t._v("KeysManager")]),t._v(" every time\nyou restart. This "),a("code",[t._v("key_seed")]),t._v(" is used to derive your node's secret key (which\ncorresponds to its node pubkey) and all other secret key material.")]),t._v(" "),a("li",[t._v("The current time is part of the "),a("code",[t._v("KeysManager")]),t._v("'s parameters because it is used to derive\nrandom numbers from the seed where required, to ensure all random\ngeneration is unique across restarts.")])]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" random bytes")]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/keysinterface/struct.KeysManager.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/KeysManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java bindings"),a("OutboundLink")],1),t._v(", "),a("RouterLink",{attrs:{to:"/key_management/"}},[t._v("Key Management guide")])],1),t._v(" "),a("h3",{attrs:{id:"10-read-channelmonitors-from-disk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#10-read-channelmonitors-from-disk"}},[t._v("#")]),t._v(" 10. Read "),a("code",[t._v("ChannelMonitor")]),t._v("s from disk")]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" if LDK is restarting and has at least 1 channel, its channel state will need to be read from disk and fed to the "),a("code",[t._v("ChannelManager")]),t._v(" on the next step.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")]),t._v(" reading "),a("code",[t._v("ChannelMonitor")]),t._v("s from disk, where each "),a("code",[t._v("ChannelMonitor")]),t._v("'s file is named after its funding outpoint:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize the array where we'll store the `ChannelMonitor`s read from disk.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),t._v(" channel_monitor_list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For each monitor stored on disk, deserialize it and place it in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `channel_monitors`.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" monitor_files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" channel_monitor_bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// read the bytes from disk the same way you")]),t._v("\n                                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wrote them in Step 5")]),t._v("\n\tchannel_monitor_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("channel_monitor_bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Convert the ArrayList into an array so we can pass it to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `ChannelManagerConstructor` in Step 11.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" channel_monitors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("channel_monitor_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("em",[t._v("none")])]),t._v(" "),a("h3",{attrs:{id:"11-initialize-the-channelmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#11-initialize-the-channelmanager"}},[t._v("#")]),t._v(" 11. Initialize the "),a("code",[t._v("ChannelManager")])]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" managing channel state")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* FRESH CHANNELMANAGER */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" block_height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert current chain tip height>;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" best_block_hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert current chain tip block hash>;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManagerConstructor")]),t._v(" channel_manager_constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManagerConstructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LDKNetwork_Bitcoin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" best_block_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  block_height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_KeysInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fee_estimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx_broadcaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* RESTARTING CHANNELMANAGER */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" serialized_channel_manager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert bytes as written to disk in Step 6>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManagerConstructor")]),t._v(" channel_manager_constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManagerConstructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  serialized_channel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" channel_monitors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_KeysInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  fee_estimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx_broadcaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelManager")]),t._v(" channel_manager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel_manager_constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")]),t._v(" No methods should be called on "),a("code",[t._v("ChannelManager")]),t._v(" until\n"),a("em",[t._v("after")]),t._v(" Step 12.")]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("code",[t._v("KeysManager")]),t._v(", "),a("code",[t._v("FeeEstimator")]),t._v(", "),a("code",[t._v("ChainMonitor")]),t._v(", "),a("code",[t._v("BroadcasterInterface")]),t._v(", "),a("code",[t._v("Logger")]),t._v(", and "),a("code",[t._v("ChannelMonitor")]),t._v("s and "),a("code",[t._v("ChannelManager")]),t._v(" bytes from Step 10 and Step 6 respectively, if restarting")]),t._v(" "),a("p",[a("strong",[t._v("Optional dependencies:")]),t._v(" "),a("code",[t._v("Filter")]),t._v(", "),a("code",[t._v("NetGraphMsgHandler")]),t._v(" (can be left as "),a("code",[t._v("null")]),t._v(" if you're not providing them)")]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/ln/channelmanager/struct.ChannelManager.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust "),a("code",[t._v("ChannelManager")]),t._v(" docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/structs/ChannelManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java "),a("code",[t._v("ChannelManager")]),t._v(" bindings"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"12-sync-channelmonitors-and-channelmanager-to-chain-tip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#12-sync-channelmonitors-and-channelmanager-to-chain-tip"}},[t._v("#")]),t._v(" 12. Sync "),a("code",[t._v("ChannelMonitor")]),t._v("s and "),a("code",[t._v("ChannelManager")]),t._v(" to chain tip")]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" this step is only necessary if you're restarting and have open channels. This step ensures that LDK channel state is up-to-date with the bitcoin blockchain")]),t._v(" "),a("p",[a("strong",[t._v("Example:")]),t._v(" with Electrum backend")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve transaction IDs to check the chain for un-confirmation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" relevant_txids_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Confirm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_relevant_txids")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" relevant_txids_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Confirm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_relevant_txids")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" relevant_txids "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relevant_txids_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" relevant_txids_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" unconfirmed_txids "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to find out from your chain source")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  if any of relevant_txids have been reorged out")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  of the chain>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" txid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" unconfirmed_txids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    channel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction_unconfirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    chain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction_unconfirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve transactions and outputs that were registered through the `Filter`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// interface.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If any of these txs/outputs were confirmed on-chain, then:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert block header from the block with confirmed tx/output")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert block height of `header`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" tx_index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert tx index in block")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" serialized_tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert tx hex as byte array")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoTuple_usizeTransactionZ")]),t._v(" tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoTuple_usizeTransactionZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tx_index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serialized_tx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Marshall all TwoTuples you built right above into an array")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoTuple_usizeTransactionZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tx_list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoTuple_usizeTransactionZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transactions_confirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transactions_confirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" best_header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to get your best known header>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" best_height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <insert code to get your best known block height>")]),t._v("\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_best_block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("best_header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" best_height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_best_block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("best_header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" best_height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finally, tell LDK that chain sync is complete. This will also spawn several")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// background threads to handle networking and event processing.")]),t._v("\nchannel_manager_constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chain_sync_completed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("customEventHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Implementation notes:")])]),t._v(" "),a("ul",[a("li",[t._v("There are 2 main options for synchronizing to chain on startup:\n"),a("ul",[a("li",[a("p",[t._v("If you are connecting full blocks or using BIP 157/158: the high-level steps that must be done for both "),a("code",[t._v("ChannelManager")]),t._v(" and each "),a("code",[t._v("ChannelMonitor")]),t._v(" are as follows:")]),t._v(" "),a("ol",[a("li",[t._v("Get the last blockhash that each object saw.")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ChannelManager")]),t._v("'s is in "),a("code",[t._v("channel_manager_constructor.channel_manager_latest_block_hash")])]),t._v(" "),a("li",[t._v("Each "),a("code",[t._v("ChannelMonitor")]),t._v("'s is in "),a("code",[t._v("channel_manager_constructor.channel_monitors")]),t._v(", as the 2nd element in each tuple")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("For each object, if its latest known blockhash has been reorged out of the chain, then disconnect blocks using "),a("code",[t._v("channel_manager.as_Listen().block_disconnected(..)")]),t._v(" or "),a("code",[t._v("channel_monitor.block_disconnected(..)")]),t._v(" until you reach the last common ancestor with the main chain.")]),t._v(" "),a("li",[t._v("For each object, reconnect blocks starting from the common ancestor until it gets to your best known chain tip using "),a("code",[t._v("channel_manager.as_Listen().block_connected(..)")]),t._v(" and/or "),a("code",[t._v("channel_monitor.block_connected(..)")]),t._v(".")]),t._v(" "),a("li",[t._v("Call "),a("code",[t._v("channel_manager_constructor.chain_sync_completed(..)")]),t._v(" to complete the initial sync process.")])])]),t._v(" "),a("li",[a("p",[t._v("Otherwise, you can use LDK's "),a("code",[t._v("Confirm")]),t._v(" interface as in the example above. The high-level steps are as follows:")]),t._v(" "),a("ol",[a("li",[t._v("Tell LDK about relevant confirmed and unconfirmed transactions.")]),t._v(" "),a("li",[t._v("Tell LDK what your best known block header and height is.")]),t._v(" "),a("li",[t._v("Call "),a("code",[t._v("channel_manager_constructor.chain_sync_completed(..)")]),t._v(" to complete the initial sync process.")])])])])]),t._v(" "),a("li",[t._v("More details about LDK's interfaces to provide chain info in Step 14.")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/trait.Listen.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust "),a("code",[t._v("Listen")]),t._v(" docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/trait.Confirm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust "),a("code",[t._v("Confirm")]),t._v(" docs"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("code",[t._v("ChannelManager")]),t._v(", "),a("code",[t._v("ChainMonitor")])]),t._v(" "),a("h3",{attrs:{id:"13-optional-bind-a-listening-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#13-optional-bind-a-listening-port"}},[t._v("#")]),t._v(" 13. Optional: Bind a Listening Port")]),t._v(" "),a("p",[a("strong",[t._v("You must follow this step if:")]),t._v(" you want to listen for incoming peer connections")]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" accepting incoming peer connections")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioPeerHandler")]),t._v(" nio_peer_handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel_manager_constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio_peer_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9735")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnio_peer_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind_listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InetSocketAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("code",[t._v("ChannelManagerConstructor")]),t._v(" ("),a("em",[t._v("after")]),t._v(" "),a("code",[t._v("chain_sync_completed(..)")]),t._v(" has been called on it)")]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-garbagecollected/blob/main/src/main/java/org/ldk/batteries/NioPeerHandler.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java "),a("code",[t._v("NioPeerHandler")]),t._v(" sample networking module"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"running-ldk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running-ldk"}},[t._v("#")]),t._v(" Running LDK")]),t._v(" "),a("p",[t._v("This section assumes you've already run all the steps in "),a("a",{attrs:{href:"#setup"}},[t._v("Setup")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"14-keep-ldk-up-to-date-with-chain-info"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#14-keep-ldk-up-to-date-with-chain-info"}},[t._v("#")]),t._v(" 14. Keep LDK Up-to-date with Chain Info")]),t._v(" "),a("p",[a("strong",[t._v("What it's used for:")]),t._v(" LDK needs to know when blocks are newly connected and disconnected and when relevant transactions are confirmed and/or reorged out.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("tabs",{attrs:{options:{useUrlFragment:!1}}},[a("tab",{attrs:{name:"Java with Full Blocks or BIP 157/158"}},[a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* UNCONFIRMED TRANSACTIONS */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve transaction IDs to check the chain for un-confirmation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" relevant_txids_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Confirm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_relevant_txids")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" relevant_txids_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Confirm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_relevant_txids")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" relevant_txids "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\trelevant_txids_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" relevant_txids_2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If any txids `relevant_txids` gets reorged out, you must call:")]),t._v("\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction_unconfirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unconfirmed_txid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction_unconfirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unconfirmed_txid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* CONFIRMED TRANSACTIONS */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve transactions and outputs to check the chain for confirmation.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// These should've been given to you for monitoring via the `Filter` interface.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If any transactions or output spends appear on-chain, you must call:")]),t._v("\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transactions_confirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" confirmed_txs_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transactions_confirmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" confirmed_txs_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* CONNECTED OR DISCONNECTED BLOCKS */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Whenever there's a new chain tip or a block has been newly disconnected, you")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// must call:")]),t._v("\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_best_block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new_best_header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new_best_height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_best_block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new_best_header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new_best_height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("tab",{attrs:{name:"Java with Electrum"}},[a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For each connected and disconnected block, and in chain-order, call these")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// methods.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If you're using BIP 157/158, then `txdata` below should always include any")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// transactions and/our outputs spends registered through the `Filter` interface,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Transactions and outputs are registered both on startup and as new relevant")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// transactions/outputs are created.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// header is a []byte type, height is `int`, txdata is a ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TwoTuple_usizeTransactionZ[], where the 0th element is the transaction's")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// position in the block (with the coinbase transaction considered position 0)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and the 1st element is the transaction bytes")]),t._v("\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_connected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txdata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_connected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txdata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nchannel_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_disconnected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchain_monitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("block_disconnected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])],1),t._v(" "),a("p",[a("strong",[t._v("Implementation notes:")])]),t._v(" "),a("ul",[a("li",[t._v("If you're using the "),a("code",[t._v("Listen")]),t._v(" interface: blocks must be connected and disconnected in chain order")]),t._v(" "),a("li",[t._v("If you're using the "),a("code",[t._v("Confirm")]),t._v(" interface: it's important to read the "),a("code",[t._v("Confirm")]),t._v(" docs linked in References, to make sure you satisfy the interface's requirements")])]),t._v(" "),a("p",[a("strong",[t._v("Dependencies:")]),t._v(" "),a("code",[t._v("ChannelManager")]),t._v(", "),a("code",[t._v("ChainMonitor")])]),t._v(" "),a("p",[a("strong",[t._v("References:")]),t._v(" "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/trait.Listen.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust "),a("code",[t._v("Listen")]),t._v(" docs"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://docs.rs/lightning/*/lightning/chain/trait.Confirm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust "),a("code",[t._v("Confirm")]),t._v(" docs"),a("OutboundLink")],1)])],1)}),[],!1,null,null,null);n.default=e.exports}}]);